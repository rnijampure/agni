{"version":3,"sources":["timePicker.js","customizeDates.js","innerPages/team/createTeamDialog.js","innerPages/team/createTeam.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","TimePickers","classes","TextField","id","label","type","defaultValue","className","InputLabelProps","shrink","inputProps","step","colourOptions","value","color","CustomiseDates","state","selectedOption","handleChange","setState","console","log","this","isMulti","name","options","classNamePrefix","placeholder","onChange","React","Component","body","backgroundColor","palette","common","white","closeButton","position","right","top","grey","paper","marginTop","flexDirection","alignItems","textAlign","avatar","margin","secondary","main","form","submit","button","DialogContent","breakpoints","up","minWidth","Dialog","DialogActions","basicMultiSelect","flexContainer","justifyContent","DialogTitle","withStyles","props","children","onClose","other","disableTypography","root","Typography","variant","IconButton","aria-label","onClick","withRouter","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","down","handleClose","history","useHistory","Button","aria-labelledby","Divider","initialValues","teamNumber","GCArea","onSubmit","values","setSubmitting","alert","JSON","stringify","setTimeout","push","validationSchema","Yup","shape","required","touched","errors","handleBlur","handleSubmit","Container","component","maxWidth","CssBaseline","noValidate","validateOnBlur","validateOnChange","render","field","error","Boolean","fullWidth","autoComplete","autoFocus","onBlur","helperText","String","InputLabel","htmlFor","style","Select","native","FormHelperText","GCLID","NoOfFeeders","FeederId","Hidden","mdUp","centerAlignedContent","alignSelf","minHeight","fontSize","fontWeight","CreateTeam","Fragment"],"mappings":"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","file":"static/js/15.b97c8b44.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function TimePickers() {\r\n  const classes = useStyles();\r\n\r\n  return ( \r\n      <TextField\r\n        id=\"time\"\r\n        label=\"Time\"\r\n        type=\"time\"\r\n        defaultValue=\"07:30\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300, // 5 min\r\n        }}\r\n      /> \r\n  );\r\n}\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n \r\n \r\nexport const colourOptions = [\r\n    { value: 'Sunday', label: 'Sunday', color: '#0052CC',  },\r\n    { value: 'Monday', label: 'Monday', color: '#5243AA' },\r\n    { value: 'Tuesday', label: 'Tuesday', color: '#FF5630',  },\r\n    { value: 'Wednesday', label: 'Wednesday', color: '#FF8B00' },\r\n    { value: 'Thursday', label: 'Thursday', color: '#FFC400' },\r\n    { value: 'Friday', label: 'Friday', color: '#36B37E' },\r\n    { value: 'Saturday', label: 'Saturday', color: '#00B8D9',},\r\n  ];\r\n  \r\nclass CustomiseDates extends React.Component {\r\n  state = {\r\n    selectedOption: null,\r\n  };\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  };\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n \r\n    return (\r\n      <Select\r\n      defaultValue={[colourOptions[2], colourOptions[3]]}\r\n      isMulti\r\n      name=\"colors\"\r\n      options={colourOptions}\r\n      className=\"basic-multi-select\"\r\n      classNamePrefix=\"select\" placeholder=\"Select Dates\"\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n      />\r\n      \r\n    );\r\n  }\r\n}\r\nexport default CustomiseDates;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent'; \r\nimport { withRouter } from 'react-router-dom'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TimePickers from '../../timePicker'\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Formik, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CustomiseDates from '../../customizeDates'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select'; \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  }, \r\n   closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    flexWrap: 'wrap'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 5), width: '100%',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1, 0, 5),\r\n    width: '100%',\r\n  },\r\n  DialogContent: {\r\n    flexWrap: 'wrap',\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: \"50%\",\r\n        minWidth : '500px'\r\n      },\r\n  },\r\n  Dialog:{\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: \"100%\",\r\n        minWidth : '500px'\r\n      },\r\n  },\r\n  DialogActions:{\r\n    flexDirection : 'column'\r\n  },\r\n  basicMultiSelect:{\r\n    display: 'inlineFlex'\r\n  },\r\n  flexContainer:{\r\n    display:'flex',\r\n    flexDirection:'row',\r\n    flexWrap:'wrap',\r\n    justifyContent:'space-between'\r\n  }\r\n  \r\n}));\r\nconst DialogTitle = withStyles(makeStyles)(props => {\r\n\r\n  let classes = useStyles();\r\n  const { children, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\nfunction TeamDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n\r\n  };\r\n\r\n \r\n  \r\n  \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n let history = useHistory();\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        CREATE TEAM\r\n      </Button>\r\n\r\n\r\n\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}\r\n      > \r\n        <DialogTitle id=\"form-dialog-title\" onClose={handleClose}>Create Team</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n\r\n\r\n\r\n\r\n          <Formik\r\n            initialValues={{ teamNumber: '' , GCArea  : ''  }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              alert(JSON.stringify(values, null, 2));\r\n              setTimeout(() => {\r\n                setOpen(false);\r\n                history.push(\"/dashboard/Teams/\")\r\n\r\n\r\n\r\n                //  setSubmitting(false);\r\n              }, 500);\r\n            }}\r\n\r\n            validationSchema={Yup.object().shape({\r\n              teamNumber: Yup.number() \r\n                .required('Required Team Number'),\r\n                GCArea : Yup.string()\r\n                .required('Required Green Cluster Area or Number') \r\n            })}\r\n          >\r\n\r\n            {props => {\r\n              const {\r\n\r\n                values,\r\n                touched,\r\n                errors, \r\n                handleBlur,\r\n                handleSubmit, \r\n                handleChange, \r\n              } = props;\r\n              return (\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                  <CssBaseline />\r\n                  <div className={classes.paper}>\r\n\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit} >\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"teamNumber\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.teamNumber && form.touched.teamNumber)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"teamNumber\"\r\n                            label=\"Create Green Cluster Number\"\r\n                            name=\"teamNumber\"\r\n                            autoComplete=\"teamNumber\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.teamNumber &&\r\n                              form.touched.teamNumber &&\r\n                              String(form.errors.teamNumber)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n  <InputLabel htmlFor=\"GCArea\" style={{'textAlign' : 'left'}}>Green Cluster Number/Area</InputLabel>\r\n  <div className={\"MuiFormHelperText-root Mui-error Mui-required\"}>\r\n<Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"GCArea\" \r\n                        label=\"GCArea\"\r\n                        render={({ field, form }) => (\r\n                            <Select\r\n                            native\r\n                            error={\r\n                                Boolean(form.errors.GCArea && form.touched.GCArea)\r\n                              }\r\n                            value={values.GCArea}\r\n                            onChange={handleChange }\r\n                            inputProps={{\r\n                              name: 'GCArea',\r\n                              id: 'GCArea',\r\n                            }} \r\n                            required\r\n                            fullWidth \r\n                            \r\n                            name=\"GCArea\"\r\n                            autoComplete=\"GCArea\"\r\n                            autoFocus\r\n                           \r\n                          >\r\n                            <option value=\"\" />\r\n                            <option value={10}>Ten</option>\r\n                            <option value={20}>Twenty</option>\r\n                            <option value={30}>Thirty</option>\r\n                          </Select>\r\n \r\n                        )}\r\n                      />\r\n  <FormHelperText>{\r\n   \r\n                              errors.GCArea &&\r\n                              touched.GCArea &&\r\n                              String( errors.GCArea)\r\n                           \r\n                          }</FormHelperText></div> \r\n                            \r\n      <div  className={classes.flexContainer} >                       \r\n       <CustomiseDates />\r\n       <TimePickers />\r\n       </div>\r\n       <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"GCLID\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.GCLID && form.touched.GCLID)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"GCLID\"\r\n                            label=\"Create Green Cluster Lead Id\"\r\n                            name=\"GCLID\"\r\n                            autoComplete=\"GCLID\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.GCLID &&\r\n                              form.touched.GCLID &&\r\n                              String(form.errors.GCLID)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                         <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"NoOfFeeders\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.NoOfFeeders && form.touched.NoOfFeeders)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"NoOfFeeders\"\r\n                            label=\"No Of Feeders\"\r\n                            name=\"NoOfFeeders\"\r\n                            autoComplete=\"NoOfFeeders\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.NoOfFeeders &&\r\n                              form.touched.NoOfFeeders &&\r\n                              String(form.errors.NoOfFeeders)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                                               <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"FeederId\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.FeederId && form.touched.FeederId)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"FeederId\"\r\n                            label=\"Feeder Id\"\r\n                            name=\"FeederId\"\r\n                            autoComplete=\"FeederId\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.FeederId &&\r\n                              form.touched.FeederId &&\r\n                              String(form.errors.FeederId)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />  \r\n                  <DialogActions>\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                    >\r\n                      CREATE\r\n     </Button>\r\n                    <Hidden mdUp>\r\n                      <Button\r\n                        type=\"button\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        onClick={handleClose}\r\n                      >\r\n                        CANCEL\r\n     </Button>\r\n                    </Hidden>\r\n                  </DialogActions>   </form>\r\n                  </div>\r\n                </Container>\r\n              );\r\n            }}\r\n\r\n          </Formik>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(TeamDialog)","import React from 'react'  \r\nimport TeamDialog  from './createTeamDialog'  ;\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n \r\n  centerAlignedContent:{\r\n    \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    minHeight: '56vh',\r\n    textAlign:'center',\r\n    \"h1#{&}\":{ \r\n      fontSize: '24px',\r\n  fontWeight: '400',\r\n    }\r\n  }\r\n}));\r\n  export default function  CreateTeam() { \r\n    const classes = useStyles();\r\n\r\n    return (\r\n      \r\n     <React.Fragment> \r\n    <h1 className=\"{ main_heading-text }\">     Team</h1>\r\n        <div   className={classes.centerAlignedContent} >\r\n       \r\n          <h1>\r\n         Create   Team\r\n        </h1> \r\n        <TeamDialog/> \r\n        </div>\r\n       </React.Fragment>\r\n      )\r\n \r\n  }\r\n  \r\n"],"sourceRoot":""}