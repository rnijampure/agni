{"version":3,"sources":["innerPages/GreenCluster/createGreenClustersDialog.js","innerPages/GreenCluster/createGreenClusters.js"],"names":["useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","closeButton","position","right","spacing","top","color","grey","Dialog","maxWidth","paper","marginTop","display","flexDirection","alignItems","textAlign","flexWrap","avatar","margin","secondary","main","form","width","submit","button","DialogContent","DialogTitle","withStyles","props","classes","children","onClose","other","disableTypography","className","root","variant","aria-label","onClick","withRouter","React","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","history","useHistory","aria-labelledby","id","initialValues","greenclusterNumber","Locality","onSubmit","values","setSubmitting","alert","JSON","stringify","setTimeout","push","validationSchema","Yup","shape","required","handleChange","handleBlur","handleSubmit","component","noValidate","validateOnBlur","validateOnChange","name","render","field","error","Boolean","errors","touched","fullWidth","label","autoComplete","autoFocus","onChange","onBlur","helperText","String","area","kasaragod","state","type","mdUp","centerAlignedContent","justifyContent","alignSelf","minHeight","fontSize","fontWeight","GreenCluster","Fragment"],"mappings":"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","file":"static/js/10.2c7e5596.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent'; \r\nimport { withRouter } from 'react-router-dom'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Formik, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  }, \r\n   closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  Dialog: {\r\n    maxWidth: '800px'\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    flexWrap: 'wrap'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 5), width: '100%',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1, 0, 5),\r\n    width: '100%',\r\n  },\r\n  DialogContent: {\r\n    flexWrap: 'wrap'\r\n  }\r\n}));\r\n\r\nconst DialogTitle = withStyles(makeStyles)(props => {\r\n\r\n  let classes = useStyles();\r\n  const { children, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nfunction FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        CREATE GREEN CLUSTER\r\n      </Button>\r\n\r\n\r\n\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" onClose={handleClose}>Create Green Cluster</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n\r\n\r\n\r\n\r\n          <Formik\r\n            initialValues={{\r\n              greenclusterNumber: '',\r\n              Locality: '',\r\n\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              alert(JSON.stringify(values, null, 2));\r\n              setTimeout(() => {\r\n                setOpen(false);\r\n                history.push(\"/dashboard/GreenClusters/\")\r\n\r\n\r\n\r\n                //  setSubmitting(false);\r\n              }, 500);\r\n            }}\r\n\r\n            validationSchema={Yup.object().shape({\r\n              greenclusterNumber: Yup.string()\r\n                .required('Please provide a greencluster number'),\r\n                Locality :  Yup.string()\r\n                .required('Locaity is Mandatory!')\r\n            })}\r\n          >\r\n\r\n            {props => {\r\n              const {\r\n\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                  <CssBaseline />\r\n                  <div className={classes.paper}>\r\n\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit} >\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"greenclusterNumber\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.greenclusterNumber && form.touched.greenclusterNumber)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"greenclusterNumber\"\r\n                            label=\"Create Green Cluster Number\"\r\n                            name=\"greenclusterNumber\"\r\n                            autoComplete=\"greenclusterNumber\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.greenclusterNumber &&\r\n                              form.touched.greenclusterNumber &&\r\n                              String(form.errors.greenclusterNumber)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"Locality\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.Locality && form.touched.Locality)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"Locality\"\r\n                            label=\"Locality\"\r\n                            id=\"Locality\"\r\n                            autoComplete=\"current-Locality\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.Locality &&\r\n                              form.touched.Locality &&\r\n                              String(form.errors.Locality)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"Area\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.area && form.touched.area)\r\n                            }\r\n                            margin=\"normal\" \r\n                            fullWidth\r\n                            name=\"Area\"\r\n                            label=\"Area\"\r\n                            id=\"Area\"\r\n                            autoComplete=\"current-area\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.area &&\r\n                              form.touched.area &&\r\n                              String(form.errors.area)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"Kasaragod\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.area && form.touched.area)\r\n                            }\r\n                            margin=\"normal\" \r\n                            fullWidth\r\n                            name=\"Kasaragod\"\r\n                            label=\"Kasaragod\"\r\n                            id=\"Kasaragod\"\r\n                            autoComplete=\"current-kasaragod\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.kasaragod &&\r\n                              form.touched.kasaragod &&\r\n                              String(form.errors.kasaragod)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"State\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.area && form.touched.area)\r\n                            }\r\n                            margin=\"normal\" \r\n                            fullWidth\r\n                            name=\"State\"\r\n                            label=\"State\"\r\n                            id=\"State\"\r\n                            autoComplete=\"current-state\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.state &&\r\n                              form.touched.state &&\r\n                              String(form.errors.state)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n\r\n                      <DialogActions>\r\n\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                        >\r\n                          CREATE\r\n     </Button>\r\n                        <Hidden mdUp>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={handleClose}\r\n                          >\r\n                            CANCEL\r\n     </Button>\r\n                        </Hidden>\r\n                      </DialogActions>   </form>\r\n                  </div>\r\n                </Container>\r\n              );\r\n            }}\r\n\r\n          </Formik>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(FormDialog)","import React from 'react'  \r\nimport FormDialog  from './createGreenClustersDialog'  \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n \r\n  centerAlignedContent:{\r\n    \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    minHeight: '88vh',\r\n    textAlign:'center',\r\n    \"h1#{&}\":{ \r\n      fontSize: '24px',\r\n  fontWeight: '400',\r\n    }\r\n  }\r\n}));\r\n  export default function  GreenCluster() { \r\n    const classes = useStyles();\r\n\r\n    return (\r\n     <React.Fragment>\r\n    <h1 className=\"{ main_heading-text }\">     Request</h1>\r\n         <div   className={classes.centerAlignedContent} >    <h1>\r\n            Create Green Clusters\r\n        </h1> \r\n        <FormDialog/> \r\n        </div>\r\n       </React.Fragment>\r\n      )\r\n \r\n  }\r\n  \r\n"],"sourceRoot":""}